CREATE TABLE USERS(
    user_id VARCHAR(255),
    name VARCHAR(255),
    email VARCHAR(255),
    country VARCHAR(100),
    CONSTRAINT PK_USERS PRIMARY KEY (user_id)
);

CREATE TABLE PROFILE(
    user_id VARCHAR(255),
    avatar_url VARCHAR(255),
    bio TEXT,
    CONSTRAINT PK_PROFILE PRIMARY KEY (user_id),
    CONSTRAINT FK_PROFILE_USER FOREIGN KEY (user_id) REFERENCES USERS(user_id)
);

CREATE TABLE SUBSCRIPTION(
    subscription_id VARCHAR(255),
    user_id VARCHAR(255),
    plan_details VARCHAR(255),
    price DECIMAL(10, 2),
    CONSTRAINT PK_SUBSCRIPTION PRIMARY KEY (subscription_id),
    CONSTRAINT FK_SUBSCRIPTION_USER FOREIGN KEY (user_id) REFERENCES USERS(user_id)
);

CREATE TABLE RATING(
    rating_id VARCHAR(255),
    user_id VARCHAR(255),
    content_id VARCHAR(255),
    scale_id VARCHAR(255),
    score DECIMAL(2, 1),
    created_at DATETIME,
    review_text TEXT,
    CONSTRAINT PK_RATING PRIMARY KEY (rating_id),
    CONSTRAINT FK_RATING_USER FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    CONSTRAINT FK_RATING_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id),
    CONSTRAINT FK_RATING_SCALE FOREIGN KEY (scale_id) REFERENCES RATING_SCALE(scale_id)
);

CREATE TABLE CONTENT(
    content_id VARCHAR(255),
    title VARCHAR(255),
    description TEXT,
    CONSTRAINT PK_CONTENT PRIMARY KEY (content_id)
);

CREATE TABLE RATING_SCALE(
    scale_id VARCHAR(255),
    scale_name VARCHAR(255),
    scale_description VARCHAR(255),
    CONSTRAINT PK_RATING_SCALE PRIMARY KEY (scale_id)
);

CREATE TABLE GENRE(
    genre_id VARCHAR(255),
    genre_name VARCHAR(255),
    CONSTRAINT PK_GENRE PRIMARY KEY (genre_id)
);

CREATE TABLE USER_GENRES(
    user_id VARCHAR(255),
    genre_id VARCHAR(255),
    CONSTRAINT FK_USER_GENRE_USER FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    CONSTRAINT FK_USER_GENRE_GENRE FOREIGN KEY (genre_id) REFERENCES GENRE(genre_id)
);

CREATE TABLE MOVIE(
    content_id VARCHAR(255),
    release_date DATETIME,
    duration INT,
    CONSTRAINT PK_MOVIE_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id)
);

CREATE TABLE MOVIE_GENRE(
    content_id VARCHAR(255),
    genre_id VARCHAR(255),
    CONSTRAINT FK_MOVIE_GENRE_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id),
    CONSTRAINT FK_MOVIE_GENRE_GENRE FOREIGN KEY (genre_id) REFERENCES GENRE(genre_id)
);

CREATE TABLE ACTOR(
    actor_id VARCHAR(255),
    actor_name VARCHAR(255),
    CONSTRAINT PK_ACTOR PRIMARY KEY (actor_id)
);

CREATE TABLE ROLE(
    role_id VARCHAR(255),
    role_name VARCHAR(255),
    CONSTRAINT PK_ROLE PRIMARY KEY (role_id)
);

CREATE TABLE MOVIE_CASTING(
    actor_id VARCHAR(255),
    content_id VARCHAR(255),
    role_id VARCHAR(255),
    CONSTRAINT FK_MOVIE_CASTING_ACTOR FOREIGN KEY (actor_id) REFERENCES ACTOR(actor_id),
    CONSTRAINT FK_MOVIE_CASTING_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id),
    CONSTRAINT FK_MOVIE_CASTING_ROLE FOREIGN KEY (role_id) REFERENCES ROLE(role_id)
);

CREATE TABLE SERIES(
    series_id VARCHAR(255),
    content_id VARCHAR(255),
    number_of_seasons INT,
    CONSTRAINT PK_SERIES PRIMARY KEY (series_id),
    CONSTRAINT FK_MOVIE_GENRE_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id)
);

CREATE TABLE EPISODE(
    episode_id VARCHAR(255),
    series_id VARCHAR(255),
    title VARCHAR(255),
    CONSTRAINT PK_EPISODE PRIMARY KEY (episode_id),
    CONSTRAINT FK_EPISODE_SERIES FOREIGN KEY (series_id) REFERENCES SERIES(series_id)
);

CREATE TABLE VIEWING_HISTORY(
    viewing_history_id VARCHAR(255),
    user_id VARCHAR(255),
    content_id VARCHAR(255),
    CONSTRAINT PK_VIEWING_HISTORY PRIMARY KEY (viewing_history_id),
    CONSTRAINT FK_VIEWING_HISTORY_USER FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    CONSTRAINT FK_VIEWING_HISTORY_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id)
);

CREATE TABLE AWARD(
    award_id VARCHAR(255),
    award_name VARCHAR(255),
    CONSTRAINT PK_AWARD PRIMARY KEY (award_id)
);

CREATE TABLE MOVIE_AWARD(
    content_id VARCHAR(255),
    award_id VARCHAR(255),
    award_year INT,
    CONSTRAINT FK_MOVIE_AWARD_CONTENT FOREIGN KEY (content_id) REFERENCES CONTENT(content_id),
    CONSTRAINT FK_MOVIE_AWARD_AWARD FOREIGN KEY (award_id) REFERENCES AWARD(award_id)
);

------------------------------------------------------------------------------------------------------

CREATE TABLE SONGS(
    song_id VARCHAR(255),
    album_id VARCHAR(255),
    genre_id VARCHAR(255),
    title VARCHAR(255),
    duration INT,
    screen_time INT,
    CONSTRAINT PK_SONGS PRIMARY KEY (song_id),
    CONSTRAINT FK_SONGS_ALBUM FOREIGN KEY (album_id) REFERENCES ALBUM(album_id),
    CONSTRAINT FK_SONGS_GENRE FOREIGN KEY (genre_id) REFERENCES GENRE(genre_id)
);

CREATE TABLE ALBUM(
    album_id VARCHAR(255),
    artist_id VARCHAR(255),
    genre_id VARCHAR(255),
    title VARCHAR(255),
    CONSTRAINT PK_ALBUM PRIMARY KEY (album_id),
    CONSTRAINT FK_ALBUM_ARTIST FOREIGN KEY (artist_id) REFERENCES ARTIST(artist_id),
    CONSTRAINT FK_ALBUM_GENRE FOREIGN KEY (genre_id) REFERENCES GENRE(genre_id)
);

CREATE TABLE GENRE(
    genre_id VARCHAR(255),
    name VARCHAR(255),
    CONSTRAINT PK_GENRE PRIMARY KEY (genre_id)
);

CREATE TABLE ARTIST(
    artist_id VARCHAR(255),
    stage_name VARCHAR(255),
    date_of_birth DATETIME,
    CONSTRAINT PK_ARTIST PRIMARY KEY (artist_id)
);

CREATE TABLE SONGS_PRODUCER(
    song_id VARCHAR(255),
    producer_id VARCHAR(255),
    CONSTRAINT FK_SONGS_PRODUCER_SONGS FOREIGN KEY (song_id) REFERENCES SONGS(song_id),
    CONSTRAINT FK_SONGS_PRODUCER_PRODUCER FOREIGN KEY (producer_id) REFERENCES PRODUCER(producer_id)
);

CREATE TABLE PRODUCER(
    producer_id VARCHAR(255),
    name VARCHAR(255),
    email VARCHAR(255),
    CONSTRAINT PK_PRODUCER PRIMARY KEY (producer_id)
);

ALTER TABLE SONGS ADD COLUMN title VARCHAR(255);
ALTER TABLE SONGS ADD COLUMN duration INT;
ALTER TABLE SONGS ADD COLUMN screen_time INT;